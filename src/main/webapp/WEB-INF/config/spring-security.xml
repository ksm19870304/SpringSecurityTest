<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.1.xsd">


    <security:http auto-config="true">
        <!--<security:http-basic/>-->
        <!--当我们同时定义了 http-basic 和 form-login 元素时，form-login 将具有更高的优先级-->
        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login.do" username-parameter="username"
                             password-parameter="password"
                             authentication-failure-url="/login_failure.jsp"
                             authentication-success-handler-ref="authSuccess"
                             authentication-failure-handler-ref="authFailure"/>
        <!--因为配置了authentication-failure-handler-ref，所以authentication-failure-url就会不起作用-->
        <!-- 表示匿名用户可以访问 -->
        <security:intercept-url pattern="/login.jsp"
                                access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/**" access="ROLE_USER" />
        <!-- session 管理，invalid-session-url 指定使用已经超时的 sessionId 进行请求需要重定向的页面 -->
        <security:session-management invalid-session-url="/login.jsp">
            <security:concurrency-control max-sessions="1"/>
        </security:session-management>
        <security:logout delete-cookies="JSESSIONID" logout-url="/logout" logout-success-url="/login.jsp"/>
    </security:http>
    <!-- 认证成功后的处理类 -->
    <bean id="authSuccess" class="com.darcytech.springsecuritytest.security.AuthenticationSuccessHandlerImpl"/>
    <bean id="authFailure" class="com.darcytech.springsecuritytest.security.AuthenticationFailHandlerImpl"/>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="user" password="user" authorities="ROLE_USER"/>
                <security:user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>

</beans>